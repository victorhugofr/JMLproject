import br.com.sigcar.negocio.*;
import org.aspectjml.ajmlrac.runtime.*;
import org.aspectjml.lang.annotation.*;
import java.util.List;
import javax.ejb.Stateless;
import javax.ejb.TransactionAttribute;
import javax.ejb.TransactionAttributeType;
import javax.inject.Inject;
import br.com.sigcar.dominio.Usuario;
import br.com.sigcar.exceptions.NegocioException;
import br.com.sigcar.repositorios.UsuarioRepositorio;
import java.util.Map;
import java.util.Map.Entry;


privileged aspect AspectJMLRac_br_com_sigcar_negocio_UsuarioService$7a1c29bb_06c0_4bcc_a610_24f03209c5be {

 declare precedence: AspectJMLRac$JMLRacPost4Project, AspectJMLRac_* , *;






  /** Generated by AspectJML to check the exceptional postcondition of
   * method UsuarioService. */
  after (final br.com.sigcar.negocio.UsuarioService object$rac) throwing (Throwable rac$e) :
     execution(br.com.sigcar.negocio.UsuarioService.new(  )) && this(object$rac) {
           JMLChecker.rethrowJMLAssertionError(rac$e, "br.com.sigcar.negocio.UsuarioService.<init>()");
           boolean rac$b = true;
           String rac$ErrorMsg = "";

  		   if (true) {
  		     if (rac$e instanceof java.lang.RuntimeException) {
  			   java.lang.RuntimeException jml$ex = (java.lang.RuntimeException) rac$e;
  			   boolean rac$b0 = true;
  			   try{			     
  			     rac$b0 = true;
  			   }   catch (JMLNonExecutableException rac$nonExec) {
  			     throw new JMLEvaluationError("Invalid Expression in \"br.com.sigcar.negocio.UsuarioService.java\" by method br.com.sigcar.negocio.UsuarioService.<init>\nCaused by: "+rac$e);
  			   }
  			   if(!rac$b0) {
  			     if(rac$ErrorMsg.equals("")) {
  			       rac$ErrorMsg = "jml$ex";
  			     }
  			     else {
  			       rac$ErrorMsg += " and jml$ex";
  			     }
  			   }
  			   rac$b = rac$b && rac$b0;
           if(rac$ErrorMsg.indexOf("and") >= 0 ){
             rac$ErrorMsg += " are ";
           }
           else{
             rac$ErrorMsg += " is ";
           }
               JMLChecker.checkExceptionalPostcondition(rac$b,"by method br.com.sigcar.negocio.UsuarioService.<init> regarding code at \nFile \"br.com.sigcar.negocio.UsuarioService.java\""+"\n\t"+rac$ErrorMsg+rac$e, "jml$ex", true, -1, "br.com.sigcar.negocio.UsuarioService.<init>()", rac$e);
  		 }
  		   }
  	 }


  /** Generated by AspectJML to check the exceptional postcondition of
   * method UsuarioService. */
  after (final br.com.sigcar.negocio.UsuarioService object$rac, final br.com.sigcar.repositorios.UsuarioRepositorio usuarioRepositorio) throwing (Throwable rac$e) :
     execution(br.com.sigcar.negocio.UsuarioService.new( br.com.sigcar.repositorios.UsuarioRepositorio )) && this(object$rac) && args(usuarioRepositorio) {
           JMLChecker.rethrowJMLAssertionError(rac$e, "br.com.sigcar.negocio.UsuarioService.<init>(br.com.sigcar.repositorios.UsuarioRepositorio)");
           boolean rac$b = true;
           String rac$ErrorMsg = "";

  		   if (true) {
  		     if (rac$e instanceof java.lang.RuntimeException) {
  			   java.lang.RuntimeException jml$ex = (java.lang.RuntimeException) rac$e;
  			   boolean rac$b0 = true;
  			   try{			     
  			     rac$b0 = true;
  			   }   catch (JMLNonExecutableException rac$nonExec) {
  			     throw new JMLEvaluationError("Invalid Expression in \"br.com.sigcar.negocio.UsuarioService.java\" by method br.com.sigcar.negocio.UsuarioService.<init>\nCaused by: "+rac$e);
  			   }
  			   if(!rac$b0) {
  			     if(rac$ErrorMsg.equals("")) {
  			       rac$ErrorMsg = "jml$ex";
  			     }
  			     else {
  			       rac$ErrorMsg += " and jml$ex";
  			     }
  			   }
  			   rac$b = rac$b && rac$b0;
           if(rac$ErrorMsg.indexOf("and") >= 0 ){
             rac$ErrorMsg += " are ";
           }
           else{
             rac$ErrorMsg += " is ";
           }
               JMLChecker.checkExceptionalPostcondition(rac$b,"by method br.com.sigcar.negocio.UsuarioService.<init> regarding code at \nFile \"br.com.sigcar.negocio.UsuarioService.java\""+"\n\t"+rac$ErrorMsg+rac$e, "jml$ex", true, -1, "br.com.sigcar.negocio.UsuarioService.<init>(br.com.sigcar.repositorios.UsuarioRepositorio)", rac$e);
  		 }
  		   }
  	 }


  /** Generated by AspectJML to check the exceptional postcondition of
   * method adicionar. */
  after (final br.com.sigcar.negocio.UsuarioService object$rac, final br.com.sigcar.dominio.Usuario usuario) throwing (Throwable rac$e) :
     (execution(br.com.sigcar.dominio.Usuario br.com.sigcar.negocio.UsuarioService.adicionar(br.com.sigcar.dominio.Usuario))) && this(object$rac) && args(usuario) {
           JMLChecker.rethrowJMLAssertionError(rac$e, object$rac.getClass().getName() + "@" + Integer.toHexString(System.identityHashCode(object$rac))+".adicionar(br.com.sigcar.dominio.Usuario)");
           boolean rac$b = true;
           String rac$ErrorMsg = "";

  		   if (true) {
  		     if (rac$e instanceof java.lang.Exception) {
  			   java.lang.Exception jml$ex = (java.lang.Exception) rac$e;
  			   boolean rac$b0 = true;
  			   try{			     
  			     rac$b0 = (jml$ex instanceof br.com.sigcar.exceptions.NegocioException || jml$ex instanceof java.lang.RuntimeException);
  			   }   catch (JMLNonExecutableException rac$nonExec) {
  			     throw new JMLEvaluationError("Invalid Expression in \"br.com.sigcar.negocio.UsuarioService.java\" by method br.com.sigcar.negocio.UsuarioService.adicionar regarding specifications at \nline 29, character 15 (br.com.sigcar.negocio.UsuarioService.java:29)"+"\nCaused by: "+rac$e);
  			   }
  			   if(!rac$b0) {
  			     if(rac$ErrorMsg.equals("")) {
  			       rac$ErrorMsg = "jml$ex";
  			     }
  			     else {
  			       rac$ErrorMsg += " and jml$ex";
  			     }
  			   }
  			   rac$b = rac$b && rac$b0;
           if(rac$ErrorMsg.indexOf("and") >= 0 ){
             rac$ErrorMsg += " are ";
           }
           else{
             rac$ErrorMsg += " is ";
           }
               JMLChecker.checkExceptionalPostcondition(rac$b,"by method br.com.sigcar.negocio.UsuarioService.adicionar regarding specifications at \nline 29, character 15 (br.com.sigcar.negocio.UsuarioService.java:29)"+", and \n"+"by method br.com.sigcar.negocio.UsuarioService.adicionar regarding code at \nFile \"br.com.sigcar.negocio.UsuarioService.java\", line 39 (br.com.sigcar.negocio.UsuarioService.java:39)"+"\n\t"+rac$ErrorMsg+rac$e, "jml$ex", true, -1, object$rac.getClass().getName() + "@" + Integer.toHexString(System.identityHashCode(object$rac))+".adicionar(br.com.sigcar.dominio.Usuario)", rac$e);
  		 }
  		   }
  	 }


  /** Generated by AspectJML to check the exceptional postcondition of
   * method remover. */
  after (final br.com.sigcar.negocio.UsuarioService object$rac, final br.com.sigcar.dominio.Usuario usuario) throwing (Throwable rac$e) :
     (execution(void br.com.sigcar.negocio.UsuarioService.remover(br.com.sigcar.dominio.Usuario))) && this(object$rac) && args(usuario) {
           JMLChecker.rethrowJMLAssertionError(rac$e, object$rac.getClass().getName() + "@" + Integer.toHexString(System.identityHashCode(object$rac))+".remover(br.com.sigcar.dominio.Usuario)");
           boolean rac$b = true;
           String rac$ErrorMsg = "";

  		   if (true) {
  		     if (rac$e instanceof java.lang.RuntimeException) {
  			   java.lang.RuntimeException jml$ex = (java.lang.RuntimeException) rac$e;
  			   boolean rac$b0 = true;
  			   try{			     
  			     rac$b0 = true;
  			   }   catch (JMLNonExecutableException rac$nonExec) {
  			     throw new JMLEvaluationError("Invalid Expression in \"br.com.sigcar.negocio.UsuarioService.java\" by method br.com.sigcar.negocio.UsuarioService.remover\nCaused by: "+rac$e);
  			   }
  			   if(!rac$b0) {
  			     if(rac$ErrorMsg.equals("")) {
  			       rac$ErrorMsg = "jml$ex";
  			     }
  			     else {
  			       rac$ErrorMsg += " and jml$ex";
  			     }
  			   }
  			   rac$b = rac$b && rac$b0;
           if(rac$ErrorMsg.indexOf("and") >= 0 ){
             rac$ErrorMsg += " are ";
           }
           else{
             rac$ErrorMsg += " is ";
           }
               JMLChecker.checkExceptionalPostcondition(rac$b,"by method br.com.sigcar.negocio.UsuarioService.remover regarding code at \nFile \"br.com.sigcar.negocio.UsuarioService.java\""+"\n\t"+rac$ErrorMsg+rac$e, "jml$ex", true, -1, object$rac.getClass().getName() + "@" + Integer.toHexString(System.identityHashCode(object$rac))+".remover(br.com.sigcar.dominio.Usuario)", rac$e);
  		 }
  		   }
  	 }


  /** Generated by AspectJML to check the exceptional postcondition of
   * method listar. */
  after (final br.com.sigcar.negocio.UsuarioService object$rac) throwing (Throwable rac$e) :
     (execution(java.util.List br.com.sigcar.negocio.UsuarioService.listar())) && this(object$rac) {
           JMLChecker.rethrowJMLAssertionError(rac$e, object$rac.getClass().getName() + "@" + Integer.toHexString(System.identityHashCode(object$rac))+".listar()");
           boolean rac$b = true;
           String rac$ErrorMsg = "";

  		   if (true) {
  		     if (rac$e instanceof java.lang.RuntimeException) {
  			   java.lang.RuntimeException jml$ex = (java.lang.RuntimeException) rac$e;
  			   boolean rac$b0 = true;
  			   try{			     
  			     rac$b0 = true;
  			   }   catch (JMLNonExecutableException rac$nonExec) {
  			     throw new JMLEvaluationError("Invalid Expression in \"br.com.sigcar.negocio.UsuarioService.java\" by method br.com.sigcar.negocio.UsuarioService.listar\nCaused by: "+rac$e);
  			   }
  			   if(!rac$b0) {
  			     if(rac$ErrorMsg.equals("")) {
  			       rac$ErrorMsg = "jml$ex";
  			     }
  			     else {
  			       rac$ErrorMsg += " and jml$ex";
  			     }
  			   }
  			   rac$b = rac$b && rac$b0;
           if(rac$ErrorMsg.indexOf("and") >= 0 ){
             rac$ErrorMsg += " are ";
           }
           else{
             rac$ErrorMsg += " is ";
           }
               JMLChecker.checkExceptionalPostcondition(rac$b,"by method br.com.sigcar.negocio.UsuarioService.listar regarding code at \nFile \"br.com.sigcar.negocio.UsuarioService.java\", line 47 (br.com.sigcar.negocio.UsuarioService.java:47)"+"\n\t"+rac$ErrorMsg+rac$e, "jml$ex", true, -1, object$rac.getClass().getName() + "@" + Integer.toHexString(System.identityHashCode(object$rac))+".listar()", rac$e);
  		 }
  		   }
  	 }


  /** Generated by AspectJML to check the exceptional postcondition of
   * method atualizar. */
  after (final br.com.sigcar.negocio.UsuarioService object$rac, final br.com.sigcar.dominio.Usuario usuario) throwing (Throwable rac$e) :
     (execution(void br.com.sigcar.negocio.UsuarioService.atualizar(br.com.sigcar.dominio.Usuario))) && this(object$rac) && args(usuario) {
           JMLChecker.rethrowJMLAssertionError(rac$e, object$rac.getClass().getName() + "@" + Integer.toHexString(System.identityHashCode(object$rac))+".atualizar(br.com.sigcar.dominio.Usuario)");
           boolean rac$b = true;
           String rac$ErrorMsg = "";

  		   if (true) {
  		     if (rac$e instanceof java.lang.RuntimeException) {
  			   java.lang.RuntimeException jml$ex = (java.lang.RuntimeException) rac$e;
  			   boolean rac$b0 = true;
  			   try{			     
  			     rac$b0 = true;
  			   }   catch (JMLNonExecutableException rac$nonExec) {
  			     throw new JMLEvaluationError("Invalid Expression in \"br.com.sigcar.negocio.UsuarioService.java\" by method br.com.sigcar.negocio.UsuarioService.atualizar\nCaused by: "+rac$e);
  			   }
  			   if(!rac$b0) {
  			     if(rac$ErrorMsg.equals("")) {
  			       rac$ErrorMsg = "jml$ex";
  			     }
  			     else {
  			       rac$ErrorMsg += " and jml$ex";
  			     }
  			   }
  			   rac$b = rac$b && rac$b0;
           if(rac$ErrorMsg.indexOf("and") >= 0 ){
             rac$ErrorMsg += " are ";
           }
           else{
             rac$ErrorMsg += " is ";
           }
               JMLChecker.checkExceptionalPostcondition(rac$b,"by method br.com.sigcar.negocio.UsuarioService.atualizar regarding code at \nFile \"br.com.sigcar.negocio.UsuarioService.java\""+"\n\t"+rac$ErrorMsg+rac$e, "jml$ex", true, -1, object$rac.getClass().getName() + "@" + Integer.toHexString(System.identityHashCode(object$rac))+".atualizar(br.com.sigcar.dominio.Usuario)", rac$e);
  		 }
  		   }
  	 }


  /** Generated by AspectJML to check the exceptional postcondition of
   * method buscar. */
  after (final br.com.sigcar.negocio.UsuarioService object$rac, final br.com.sigcar.dominio.Usuario usuario) throwing (Throwable rac$e) :
     (execution(br.com.sigcar.dominio.Usuario br.com.sigcar.negocio.UsuarioService.buscar(br.com.sigcar.dominio.Usuario))) && this(object$rac) && args(usuario) {
           JMLChecker.rethrowJMLAssertionError(rac$e, object$rac.getClass().getName() + "@" + Integer.toHexString(System.identityHashCode(object$rac))+".buscar(br.com.sigcar.dominio.Usuario)");
           boolean rac$b = true;
           String rac$ErrorMsg = "";

  		   if (true) {
  		     if (rac$e instanceof java.lang.RuntimeException) {
  			   java.lang.RuntimeException jml$ex = (java.lang.RuntimeException) rac$e;
  			   boolean rac$b0 = true;
  			   try{			     
  			     rac$b0 = true;
  			   }   catch (JMLNonExecutableException rac$nonExec) {
  			     throw new JMLEvaluationError("Invalid Expression in \"br.com.sigcar.negocio.UsuarioService.java\" by method br.com.sigcar.negocio.UsuarioService.buscar\nCaused by: "+rac$e);
  			   }
  			   if(!rac$b0) {
  			     if(rac$ErrorMsg.equals("")) {
  			       rac$ErrorMsg = "jml$ex";
  			     }
  			     else {
  			       rac$ErrorMsg += " and jml$ex";
  			     }
  			   }
  			   rac$b = rac$b && rac$b0;
           if(rac$ErrorMsg.indexOf("and") >= 0 ){
             rac$ErrorMsg += " are ";
           }
           else{
             rac$ErrorMsg += " is ";
           }
               JMLChecker.checkExceptionalPostcondition(rac$b,"by method br.com.sigcar.negocio.UsuarioService.buscar regarding code at \nFile \"br.com.sigcar.negocio.UsuarioService.java\", line 57 (br.com.sigcar.negocio.UsuarioService.java:57)"+"\n\t"+rac$ErrorMsg+rac$e, "jml$ex", true, -1, object$rac.getClass().getName() + "@" + Integer.toHexString(System.identityHashCode(object$rac))+".buscar(br.com.sigcar.dominio.Usuario)", rac$e);
  		 }
  		   }
  	 }


  /** Generated by AspectJML to check the exceptional postcondition of
   * method logar. */
  after (final br.com.sigcar.negocio.UsuarioService object$rac, final br.com.sigcar.dominio.Usuario usuario) throwing (Throwable rac$e) :
     (execution(br.com.sigcar.dominio.Usuario br.com.sigcar.negocio.UsuarioService.logar(br.com.sigcar.dominio.Usuario))) && this(object$rac) && args(usuario) {
           JMLChecker.rethrowJMLAssertionError(rac$e, object$rac.getClass().getName() + "@" + Integer.toHexString(System.identityHashCode(object$rac))+".logar(br.com.sigcar.dominio.Usuario)");
           boolean rac$b = true;
           String rac$ErrorMsg = "";

  		   if (true) {
  		     if (rac$e instanceof java.lang.Exception) {
  			   java.lang.Exception jml$ex = (java.lang.Exception) rac$e;
  			   boolean rac$b0 = true;
  			   try{			     
  			     rac$b0 = (jml$ex instanceof br.com.sigcar.exceptions.NegocioException || jml$ex instanceof java.lang.RuntimeException);
  			   }   catch (JMLNonExecutableException rac$nonExec) {
  			     throw new JMLEvaluationError("Invalid Expression in \"br.com.sigcar.negocio.UsuarioService.java\" by method br.com.sigcar.negocio.UsuarioService.logar regarding specifications at \nline 59, character 15 (br.com.sigcar.negocio.UsuarioService.java:59)"+"\nCaused by: "+rac$e);
  			   }
  			   if(!rac$b0) {
  			     if(rac$ErrorMsg.equals("")) {
  			       rac$ErrorMsg = "jml$ex";
  			     }
  			     else {
  			       rac$ErrorMsg += " and jml$ex";
  			     }
  			   }
  			   rac$b = rac$b && rac$b0;
           if(rac$ErrorMsg.indexOf("and") >= 0 ){
             rac$ErrorMsg += " are ";
           }
           else{
             rac$ErrorMsg += " is ";
           }
               JMLChecker.checkExceptionalPostcondition(rac$b,"by method br.com.sigcar.negocio.UsuarioService.logar regarding specifications at \nline 59, character 15 (br.com.sigcar.negocio.UsuarioService.java:59)"+", and \n"+"by method br.com.sigcar.negocio.UsuarioService.logar regarding code at \nFile \"br.com.sigcar.negocio.UsuarioService.java\", line 70 (br.com.sigcar.negocio.UsuarioService.java:70)"+"\n\t"+rac$ErrorMsg+rac$e, "jml$ex", true, -1, object$rac.getClass().getName() + "@" + Integer.toHexString(System.identityHashCode(object$rac))+".logar(br.com.sigcar.dominio.Usuario)", rac$e);
  		 }
  		   }
  	 }




}

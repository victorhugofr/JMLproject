import br.com.sigcar.controllers.*;
import org.aspectjml.ajmlrac.runtime.*;
import org.aspectjml.lang.annotation.*;
import br.com.sigcar.dominio.Endereco;
import br.com.sigcar.services.ZonaService;
import java.util.Map;
import java.util.Map.Entry;


privileged aspect AspectJMLRac_br_com_sigcar_controllers_ZonaMBean$163744d2_4d72_4ed2_9c0e_37c8bbc5de9d {

 declare precedence: AspectJMLRac$JMLRacPost4Project, AspectJMLRac_* , *;



  /** Generated by AspectJML to check the exceptional postcondition of
   * method obterZona. */
  after (final br.com.sigcar.controllers.ZonaMBean object$rac) throwing (Throwable rac$e) :
     (execution(java.lang.String br.com.sigcar.controllers.ZonaMBean.obterZona())) && this(object$rac) {
           JMLChecker.rethrowJMLAssertionError(rac$e, object$rac.getClass().getName() + "@" + Integer.toHexString(System.identityHashCode(object$rac))+".obterZona()");
           boolean rac$b = true;
           String rac$ErrorMsg = "";

  		   if (true) {
  		     if (rac$e instanceof java.lang.RuntimeException) {
  			   java.lang.RuntimeException jml$ex = (java.lang.RuntimeException) rac$e;
  			   boolean rac$b0 = true;
  			   try{			     
  			     rac$b0 = true;
  			   }   catch (JMLNonExecutableException rac$nonExec) {
  			     throw new JMLEvaluationError("Invalid Expression in \"br.com.sigcar.controllers.ZonaMBean.java\" by method br.com.sigcar.controllers.ZonaMBean.obterZona\nCaused by: "+rac$e);
  			   }
  			   if(!rac$b0) {
  			     if(rac$ErrorMsg.equals("")) {
  			       rac$ErrorMsg = "jml$ex";
  			     }
  			     else {
  			       rac$ErrorMsg += " and jml$ex";
  			     }
  			   }
  			   rac$b = rac$b && rac$b0;
           if(rac$ErrorMsg.indexOf("and") >= 0 ){
             rac$ErrorMsg += " are ";
           }
           else{
             rac$ErrorMsg += " is ";
           }
               JMLChecker.checkExceptionalPostcondition(rac$b,"by method br.com.sigcar.controllers.ZonaMBean.obterZona regarding code at \nFile \"br.com.sigcar.controllers.ZonaMBean.java\", line 14 (br.com.sigcar.controllers.ZonaMBean.java:14)"+"\n\t"+rac$ErrorMsg+rac$e, "jml$ex", true, -1, object$rac.getClass().getName() + "@" + Integer.toHexString(System.identityHashCode(object$rac))+".obterZona()", rac$e);
  		 }
  		   }
  	 }


  /** Generated by AspectJML to check the exceptional postcondition of
   * method getEndereco. */
  after (final br.com.sigcar.controllers.ZonaMBean object$rac) throwing (Throwable rac$e) :
     (execution(br.com.sigcar.dominio.Endereco br.com.sigcar.controllers.ZonaMBean.getEndereco())) && this(object$rac) {
           JMLChecker.rethrowJMLAssertionError(rac$e, object$rac.getClass().getName() + "@" + Integer.toHexString(System.identityHashCode(object$rac))+".getEndereco()");
           boolean rac$b = true;
           String rac$ErrorMsg = "";

  		   if (true) {
  		     if (rac$e instanceof java.lang.RuntimeException) {
  			   java.lang.RuntimeException jml$ex = (java.lang.RuntimeException) rac$e;
  			   boolean rac$b0 = true;
  			   try{			     
  			     rac$b0 = true;
  			   }   catch (JMLNonExecutableException rac$nonExec) {
  			     throw new JMLEvaluationError("Invalid Expression in \"br.com.sigcar.controllers.ZonaMBean.java\" by method br.com.sigcar.controllers.ZonaMBean.getEndereco\nCaused by: "+rac$e);
  			   }
  			   if(!rac$b0) {
  			     if(rac$ErrorMsg.equals("")) {
  			       rac$ErrorMsg = "jml$ex";
  			     }
  			     else {
  			       rac$ErrorMsg += " and jml$ex";
  			     }
  			   }
  			   rac$b = rac$b && rac$b0;
           if(rac$ErrorMsg.indexOf("and") >= 0 ){
             rac$ErrorMsg += " are ";
           }
           else{
             rac$ErrorMsg += " is ";
           }
               JMLChecker.checkExceptionalPostcondition(rac$b,"by method br.com.sigcar.controllers.ZonaMBean.getEndereco regarding code at \nFile \"br.com.sigcar.controllers.ZonaMBean.java\", line 18 (br.com.sigcar.controllers.ZonaMBean.java:18)"+"\n\t"+rac$ErrorMsg+rac$e, "jml$ex", true, -1, object$rac.getClass().getName() + "@" + Integer.toHexString(System.identityHashCode(object$rac))+".getEndereco()", rac$e);
  		 }
  		   }
  	 }


  /** Generated by AspectJML to check the exceptional postcondition of
   * method setEndereco. */
  after (final br.com.sigcar.controllers.ZonaMBean object$rac, final br.com.sigcar.dominio.Endereco endereco) throwing (Throwable rac$e) :
     (execution(void br.com.sigcar.controllers.ZonaMBean.setEndereco(br.com.sigcar.dominio.Endereco))) && this(object$rac) && args(endereco) {
           JMLChecker.rethrowJMLAssertionError(rac$e, object$rac.getClass().getName() + "@" + Integer.toHexString(System.identityHashCode(object$rac))+".setEndereco(br.com.sigcar.dominio.Endereco)");
           boolean rac$b = true;
           String rac$ErrorMsg = "";

  		   if (true) {
  		     if (rac$e instanceof java.lang.RuntimeException) {
  			   java.lang.RuntimeException jml$ex = (java.lang.RuntimeException) rac$e;
  			   boolean rac$b0 = true;
  			   try{			     
  			     rac$b0 = true;
  			   }   catch (JMLNonExecutableException rac$nonExec) {
  			     throw new JMLEvaluationError("Invalid Expression in \"br.com.sigcar.controllers.ZonaMBean.java\" by method br.com.sigcar.controllers.ZonaMBean.setEndereco\nCaused by: "+rac$e);
  			   }
  			   if(!rac$b0) {
  			     if(rac$ErrorMsg.equals("")) {
  			       rac$ErrorMsg = "jml$ex";
  			     }
  			     else {
  			       rac$ErrorMsg += " and jml$ex";
  			     }
  			   }
  			   rac$b = rac$b && rac$b0;
           if(rac$ErrorMsg.indexOf("and") >= 0 ){
             rac$ErrorMsg += " are ";
           }
           else{
             rac$ErrorMsg += " is ";
           }
               JMLChecker.checkExceptionalPostcondition(rac$b,"by method br.com.sigcar.controllers.ZonaMBean.setEndereco regarding code at \nFile \"br.com.sigcar.controllers.ZonaMBean.java\""+"\n\t"+rac$ErrorMsg+rac$e, "jml$ex", true, -1, object$rac.getClass().getName() + "@" + Integer.toHexString(System.identityHashCode(object$rac))+".setEndereco(br.com.sigcar.dominio.Endereco)", rac$e);
  		 }
  		   }
  	 }




}
